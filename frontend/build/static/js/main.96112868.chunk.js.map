{"version":3,"sources":["app-material.ts","components/app/components/LinkButton.tsx","components/user/userSlice.ts","components/app/components/TopBar.tsx","components/user/SignUp.tsx","components/user/PrivateRoute.tsx","components/user/SignIn.tsx","components/Dashboard.tsx","components/WhatIDo.tsx","components/Portfolio.tsx","components/About.tsx","components/Contact.tsx","components/game/gameSlice.ts","components/game/Cell.tsx","components/game/Main.tsx","App.tsx","components/app/actions.ts","utils/auth.ts","utils/api.ts","source/sagas.ts","source/store.ts","serviceWorker.ts","index.tsx"],"names":["appMaterial","createMuiTheme","palette","type","primary","main","green","secondary","useStyles","makeStyles","theme","createStyles","button","color","props","match","text","LinkButton","path","label","history","useHistory","useRouteMatch","exact","classes","Button","className","onClick","push","userSlice","createSlice","name","initialState","authenticated","loginInProgress","signUpInProgress","loginError","signUpErrors","reducers","authFail","state","authSuccess","authFailed","doLogin","action","doneLogin","payload","error","errorMessage","doSignUp","doneSignUp","length","doSignOut","actions","selectUser","user","TopBar","dispatch","useDispatch","useSelector","Fragment","AppBar","position","Toolbar","Container","event","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","link","SignUp","useForm","register","handleSubmit","component","maxWidth","to","pathname","CssBaseline","Avatar","Typography","variant","onSubmit","data","noValidate","Grid","container","item","xs","TextField","required","fullWidth","id","autoComplete","inputRef","inputProps","maxLength","map","i","Alert","key","severity","disabled","PrivateRoute","render","undefined","SignIn","content","padding","django","react","Dashboard","align","gutterBottom","box","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","WhatIDo","Box","fontSize","fontWeight","m","sm","md","Card","CardMedia","image","CardContent","djangoColor","reactColor","Portfolio","api_docs_url","process","REACT_APP_API_BASE_URL","Link","href","cardImg","backgroundSize","About","marginBottom","breakpoints","up","layout","marginLeft","marginRight","Contact","Paper","rows","rowsMax","multiline","StatusChoices","gameSlice","status","row_size","column_size","cells","getGameInProgress","doGetGame","doneGetGame","doUpdateGame","doneUpdateGame","selectGame","game","StyledTableCell","styled","TableCell","border","background","active","StyledDiv","Cell","game_id","is_playing","includes","cell","visible","flag","value","size","cell_id","onContextMenu","preventDefault","handleOnAuxClick","table","textAlign","tableContainer","containerCI","containerButtonGroup","SimpleTable","useState","setWidth","setHeight","getCell","row","col","find","column","getRow","result","useEffect","setTimeout","window","innerWidth","innerHeight","numberOfPieces","success","TableContainer","Table","TableBody","CircularProgress","TableRow","renderBoard","handleOnClick","responsiveFontSizes","App","ThemeProvider","initApp","createAction","fetchAuthorized","addAuthHeaders","config","credentials","token","localStorage","getItem","headers","authorization","url","call","fetch","response","put","authorized","body","method","JSON","stringify","signOut","createGame","updateGame","removeItem","mines_size","initAppSaga","doLoginSaga","doSignUpSaga","getGameSaga","doUpdateGameSaga","signOutSaga","root","mode","email","password","then","json","refresh","setItem","status_code","messages","password1","password2","getMessagesFromError","errors","Object","keys","reduce","acc","cur","api","takeEvery","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","store","configureStore","reducer","userReducer","devTools","run","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.96112868.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\n\n \n\nexport const appMaterial = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: green[500],\n    },\n    secondary: {\n      main: '#f44336',\n    },\n  },\n});","import React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\ninterface Props {\n  path: string;\n  label: string;\n}\n\ninterface ButtonProps {\n  match?: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      color: (props: ButtonProps) => {\n        if (props.match) return theme.palette.text.primary;\n        return theme.palette.text.secondary;\n      },\n    },\n  })\n);\n\nexport default function LinkButton({ path, label }: Props) {\n  const history = useHistory();\n  let match = useRouteMatch({\n    path: path,\n    exact: true,\n  });\n  const classes = useStyles({'match':match});\n\n\n  return (\n    <Button className={classes.button}  onClick={() => history.push(path)}>\n      {label}\n    </Button>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../source/store';\n\n// -- Interfaces\n\ninterface UserState {\n  authenticated: boolean;\n  loginInProgress: boolean;\n  signUpInProgress: boolean;\n  loginError: string;\n  signUpErrors: string[];\n}\n\nexport interface SignInPayload {\n  email: string;\n  password: string;\n}\n\nexport interface SignUpPayload {\n  email: string;\n  password1: string;\n  password2: string;\n}\n\nexport interface LoginResultPayload {\n  error: boolean;\n  errorMessage: string;\n}\n\nconst initialState: UserState = {\n  authenticated: false,\n  loginInProgress: false,\n  signUpInProgress: false,\n  loginError: '',\n  signUpErrors: [],\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    authFail: (state) => {\n      state.authenticated = false;\n    },\n    authSuccess: (state) => {\n      state.authenticated = false;\n    },\n    authFailed: (state) => {\n      state.authenticated = false;\n    },\n    doLogin: (state, action: PayloadAction<SignInPayload>) => {\n      state.loginInProgress = true;\n    },\n    doneLogin: (state, action: PayloadAction<LoginResultPayload>) => {\n      state.authenticated = !action.payload.error;\n      state.loginInProgress = false;\n      state.loginError = action.payload.errorMessage;\n    },\n    doSignUp: (state, action: PayloadAction<SignUpPayload>) => {\n      state.signUpInProgress = true;\n    },\n    doneSignUp: (state, action: PayloadAction<string[]>) => {\n      state.authenticated = action.payload.length == 0;\n      state.signUpInProgress = false;\n      state.signUpErrors = action.payload;\n    },\n    doSignOut: (state) => {\n      state.authenticated = false;\n    },\n  },\n});\n\n// -- Actions\n\nexport const {\n  authFailed,\n  doLogin,\n  doneLogin,\n  doSignUp,\n  doneSignUp,\n  doSignOut,\n} = userSlice.actions;\n\n// -- Selectors\n\nexport const selectUser = (state: RootState) => state.user;\n\nexport default userSlice.reducer;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport LinkButton from './LinkButton';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectUser,\n  doSignOut,\n} from '../../user/userSlice'; \n\nexport default function TopBar() {\n  const dispatch = useDispatch();\n  const {authenticated} = useSelector(selectUser);\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Container>\n            <LinkButton path=\"/\" label=\"home\" />\n            <LinkButton path=\"/what-i-do\" label=\"what i do\" />\n            <LinkButton path=\"/portfolio\" label=\"portfolio\" />\n            <LinkButton path=\"/about\" label=\"about\" />\n            <LinkButton path=\"/game\" label=\"mineweeper\" />\n            <LinkButton path=\"/contact\" label=\"contact\" />\n          </Container>\n          {authenticated && <Button onClick={(event) => dispatch(doSignOut())}>LogOut</Button>}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm } from 'react-hook-form';\nimport { Alert } from '@material-ui/lab';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { SignUpPayload, selectUser, doSignUp } from './userSlice';\nimport { Redirect, Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(1),\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  link: {\n    color: 'white',\n  },\n}));\n\nexport function SignUp() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { signUpErrors, authenticated, signUpInProgress } = useSelector(selectUser);\n  const { register, handleSubmit } = useForm<SignUpPayload>();\n  const onSubmit = (data: SignUpPayload) => {\n    dispatch(doSignUp(data));\n  };\n  const displayErros = () => {\n    if (signUpErrors.length > 0) {\n      return signUpErrors.map((item, i) => {\n        return (\n          <Alert key={i} severity=\"error\">\n            {item}\n          </Alert>\n        );\n      });\n    }\n    return <></>;\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {authenticated && <Redirect to={{ pathname: '/' }} />}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register({ required: true })}\n                inputProps={{\n                  maxLength: 100,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password1\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password1\"\n                inputRef={register({ required: true })}\n                inputProps={{\n                  maxLength: 100,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password2\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password2\"\n                inputRef={register({ required: true })}\n                inputProps={{\n                  maxLength: 100,\n                }}\n              />\n            </Grid>\n          </Grid>\n          {displayErros()}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={signUpInProgress}\n          >\n            {signUpInProgress ? 'processing...' : 'sign up'}\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/signin\" className={classes.link}>\n                <Typography>Already have an account? Sign in</Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { RouteProps, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectUser } from './userSlice';\n\nexport const PrivateRoute: React.FC<RouteProps> = (props) => {\n  const { authenticated } = useSelector(selectUser);\n  if (authenticated) \n    return <Route {...props} />;\n\n  return (\n    <Route {...props} render={undefined}>\n      <Redirect to=\"/signin\" />\n    </Route>\n  );\n};\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { Link as Mlink } from '@material-ui/core/';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Alert } from '@material-ui/lab';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SignInPayload, selectUser, doLogin } from './userSlice';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, Link } from 'react-router-dom';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Mlink color=\"inherit\" href=\"https://github.com/ivanAbregu/Minesweeper\">\n        Ivan Abregu\n      </Mlink>\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  link: {\n    color: 'white',\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { loginError, authenticated, loginInProgress } = useSelector(selectUser);\n\n  const { register, handleSubmit } = useForm<SignInPayload>();\n  const onSubmit = (data: SignInPayload) => {\n    dispatch(doLogin(data));\n  };\n  const displayErros = () => {\n    if (loginError) return <Alert severity=\"error\">{loginError}</Alert>;\n    // if (loginError.length > 0) {\n    //   return loginError.map((item, i) => {\n    //     return (\n    //       <Alert key={i} severity=\"error\">\n    //         {item}\n    //       </Alert>\n    //     );\n    //   });\n    // }\n    return <></>;\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {authenticated && <Redirect to={{ pathname: '/' }} />}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={register({ required: true })}\n                inputProps={{\n                  maxLength: 100,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={register({ required: true })}\n                inputProps={{\n                  maxLength: 100,\n                }}\n              />\n            </Grid>\n          </Grid>\n          {displayErros()}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={loginInProgress}\n          >\n            {loginInProgress ? 'processing...' : 'sign In'}\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/signup\" className={classes.link}>\n                <Typography> Don't have an account? Sign Up</Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      padding: theme.spacing(12, 10, 0),\n    },\n    django: {\n      color: theme.palette.primary.main,\n  },\n  react: {\n    color: '#61dafb',\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main>\n        <div className={classes.content}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h1\"  align='center' gutterBottom>\n              Iván Abregú\n            </Typography>\n            <Typography component=\"h1\" variant=\"h2\"  align='center' gutterBottom>\n              <a className={classes.django}>Django</a>\n              <a> + </a>\n              <a className={classes.react}>React.js</a>\n            </Typography>\n            <Typography component=\"h1\" variant=\"h2\"  align='center' gutterBottom>\n              Full Stack Developer\n            </Typography>\n          </Container>\n        </div>\n\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    box: {\n      'text-align': 'center',\n      margin: 30,\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%',\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport default function WhatIDo() {\n  const classes = useStyles();\n  return (\n    <Grid>\n      <Box\n        fontSize=\"h2.fontSize\"\n        fontWeight=\"fontWeightBold\"\n        m={1}\n        className={classes.box}\n      >\n        What I do\n      </Box>\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        Things I'm skilled at and passionate about.\n      </Box>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={6}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random/800x600/?backend\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Back-End Development\n                </Typography>\n                <Typography>\n                  Fast and engaging Back-End apps with Django that bring your ideas to\n                  life.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random/800x600/?web,frontend,design\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Front-End Development\n                </Typography>\n                <Typography>\n                  Fast, responsive and engaging Front-End apps with React.js that bring\n                  your ideas to life.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random/800x600?connect,services,code\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  API Integration & Development\n                </Typography>\n                <Typography>\n                  REST and SOAP API integration. REST API development with Django Rest\n                  Framework.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random/800x600?db,database,arquitecture\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Database Design\n                </Typography>\n                <Typography>\n                  Database architectures in PostgreSQL, MySQL, Oracle and MongoDB,\n                  always aiming for performance, scale and stability.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random/800x600?cloud,sky\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Cloud Integration\n                </Typography>\n                <Typography>\n                  Deployment of Django apps, ReactJS apps and databases to leading cloud\n                  platforms such as Amazon AWS, Digital Ocean.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardMedia\n                className={classes.cardMedia}\n                image=\"https://source.unsplash.com/random/800x600?money,payment\"\n              />\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Payment Gateway Integration\n                </Typography>\n                <Typography>\n                  Integration with the most popular Payment Gateways such as Stripe and\n                  Paypal.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    box: {\n      'text-align': 'center',\n      margin: 30,\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%',\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    djangoColor: {\n      marginTop: 10,\n      color: theme.palette.primary.main,\n    },\n    reactColor: {\n      marginTop: 10,\n      color: '#61dafb',\n    },\n  })\n);\n\nexport default function Portfolio() {\n  const classes = useStyles();\n  const api_docs_url = `${process.env.REACT_APP_API_BASE_URL}/api/docs/`;\n\n  return (\n    <Grid>\n      <Box\n        fontSize=\"h2.fontSize\"\n        fontWeight=\"fontWeightBold\"\n        m={1}\n        className={classes.box}\n      >\n        Portfolio\n      </Box>\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        I created the current website you are looking at to show you what I can do with\n        Django and React.\n      </Box>\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        On MINEWEEPER Page you will be able to play the MINEWEEPER game.\n      </Box>\n      <Container className={classes.cardGrid} maxWidth=\"lg\">\n        <Grid container spacing={2}>\n          <Grid item xs={6} sm={6} md={6}>\n            <Card className={classes.card}>\n              <CardContent className={classes.cardContent}>\n                <Typography\n                  gutterBottom\n                  align=\"center\"\n                  variant=\"h5\"\n                  component=\"h2\"\n                  className={classes.djangoColor}\n                >\n                  Mineweeper BackEnd\n                </Typography>\n                <Typography>\n                  The game logic was created on Django and storage in an PostgreSQL\n                  database. Each game is created and asociated per user. Also I created\n                  some API REST, you can check the documentation{' '}\n                  <Link color=\"secondary\" href={api_docs_url}>\n                    here\n                  </Link>\n                  .\n                </Typography>\n                <Typography\n                  gutterBottom\n                  variant=\"h6\"\n                  component=\"h3\"\n                  className={classes.djangoColor}\n                >\n                  Relevant technologies:\n                </Typography>\n                <Typography color=\"textSecondary\">\n                  <ul>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://www.docker.com/\">\n                        Docker\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://docs.docker.com/compose/\">\n                        Docker Compose\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://docs.python.org/3/\">\n                        Python 3.8\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://python-poetry.org/\">\n                        Poetry\n                      </Link>\n                    </li>\n                    <li>\n                      <Link\n                        color=\"secondary\"\n                        href=\"https://docs.djangoproject.com/en/3.1/releases/3.0/\"\n                      >\n                        Django 3.0\n                      </Link>\n                    </li>\n                    <li>\n                      <Link\n                        color=\"secondary\"\n                        href=\"https://www.django-rest-framework.org/\"\n                      >\n                        Django REST Framework\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://www.postgresql.org/\">\n                        PostgreSQL\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://gunicorn.org/\">\n                        Gunicorn\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://www.nginx.com/\">\n                        Nginx\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://github.com/psf/black\">\n                        Black\n                      </Link>\n                    </li>\n                  </ul>\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={6} sm={6} md={6}>\n            <Card className={classes.card}>\n              <CardContent className={classes.cardContent}>\n                <Typography\n                  gutterBottom\n                  align=\"center\"\n                  variant=\"h5\"\n                  component=\"h2\"\n                  className={classes.reactColor}\n                >\n                  Mineweeper FrontEnd\n                </Typography>\n                <Typography>\n                  This web application was created with React Hooks and TypeScript,\n                  consuming the backend web services asynchronously with Redux-Sagas and\n                  using Redux as state-management.\n                </Typography>\n                <Typography\n                  gutterBottom\n                  variant=\"h6\"\n                  component=\"h3\"\n                  className={classes.reactColor}\n                >\n                  Relevant technologies:\n                </Typography>\n                <Typography color=\"textSecondary\">\n                  <ul>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://reactjs.org/\">\n                        React.js\n                      </Link>\n                    </li>\n                    <li>\n                      <Link\n                        color=\"secondary\"\n                        href=\"https://reactjs.org/docs/hooks-overview.html\"\n                      >\n                        React Hooks\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://www.typescriptlang.org/\">\n                        TypeScript{' '}\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://material-ui.com/\">\n                        MATERIAL-UI\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://redux.js.org/\">\n                        Redux\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://redux-saga.js.org/\">\n                        Redux-Saga\n                      </Link>\n                    </li>\n                    <li>\n                      <Link color=\"secondary\" href=\"https://reactrouter.com/\">\n                        React Router\n                      </Link>\n                    </li>\n                  </ul>\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n        <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n          Check the code on my github:{' '}\n          <Link color=\"secondary\" href=\"https://github.com/ivanAbregu/Minesweeper\">\n            ivanAbregu\n          </Link>\n        </Box>\n      </Container>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    box: {\n      'text-align': 'center',\n      margin: 30,\n    },\n\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '50%',\n    },\n    cardImg: {\n      paddingTop: '100%',\n      backgroundSize: '70%',\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport default function About() {\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Box\n        fontSize=\"h2.fontSize\"\n        fontWeight=\"fontWeightBold\"\n        m={1}\n        className={classes.box}\n      >\n        About me\n      </Box>\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        Hi there! I am a Fullstack developer specialized in Django and React.\n      </Box>\n      <Container maxWidth=\"md\">\n        <Grid container spacing={1}>\n          <Grid item md={12}>\n            <Card className={classes.card}>\n              <CardMedia className={classes.cardMedia} image=\"img/f1.jpg\" />\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        I've always had a passion for technology and product development - even before\n        becoming a developer. I use my experience to be more than just a coder,\n        connecting business requirements with modern technology.\n      </Box>\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        I have 8+ years in IT, 4+ years of development experience building fullstack\n        products from scratch, developing and integrating APIs, working with a variety\n        of databases and clould platforms.\n      </Box>\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        Below you'll find a list of some of my skills:\n      </Box>\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={6}>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/html.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                HTML\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/css.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                CSS\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/js.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                JavaScript\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/ts.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                TypeScript\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/react.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                React\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/redux.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Redux\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/saga.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Redux-Saga\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/mui.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Material-UI\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/md.svg\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Ant Design\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/python.svg\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Python\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/django.jpg\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Django\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/drf.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Django Rest Framework\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/celery.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Celery\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/docker.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Docker\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/postgresql.svg\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                PostgreSQL\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/mongo.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                MongoDB\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/redis.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Redis\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/gunicorn.svg\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Gunicorn\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/nginx.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Nginx\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/aws.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Amazon Web Services\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/digitalocean.svg\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Digital Ocean\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/git.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                GitHub\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/gira.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Gira and Confluence\n              </Typography>\n            </CardContent>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <CardMedia className={classes.cardImg} image=\"img/jn.png\" />\n            <CardContent className={classes.cardContent}>\n              <Typography align=\"center\" gutterBottom variant=\"h5\" component=\"h5\">\n                Jenkins\n              </Typography>\n            </CardContent>\n          </Grid>\n        </Grid>\n      </Container>\n    </Grid>\n  );\n}\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SignInPayload, selectUser, doLogin } from './user/userSlice';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    box: {\n      'text-align': 'center',\n      margin: 60,\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    layout: {\n      width: 'auto',\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n  })\n);\n\nexport default function Contact() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { loginInProgress } = useSelector(selectUser);\n  const { register, handleSubmit } = useForm<SignInPayload>();\n  const onSubmit = (data: SignInPayload) => {\n    dispatch(doLogin(data));\n  };\n  const displayErros = () => {\n    // if (signInErrors.length > 0) {\n    //   return signInErrors.map((item, i) => {\n    //     return (\n    //       <Alert key={i} severity=\"error\">\n    //         {item}\n    //       </Alert>\n    //     );\n    //   });\n    // }\n    return <></>;\n  };\n  return (\n    <Grid>\n      <Box\n        fontSize=\"h1.fontSize\"\n        fontWeight=\"fontWeightBold\"\n        m={1}\n        className={classes.box}\n      >\n        Contact me\n      </Box>\n      <Box fontSize=\"h4.fontSize\" m={1} className={classes.box}>\n        I'd love to hear from you.\n      </Box>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <form onSubmit={handleSubmit(onSubmit)} className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputRef={register({ required: true })}\n                  inputProps={{\n                    maxLength: 100,\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  rows={10}\n                  rowsMax={10}\n                  multiline\n                  required\n                  fullWidth\n                  name=\"message\"\n                  label=\"message\"\n                  type=\"message\"\n                  id=\"message\"\n                  inputRef={register({ required: true })}\n                  inputProps={{\n                    maxLength: 500,\n                  }}\n                />\n              </Grid>\n            </Grid>\n            {displayErros()}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              // disabled={signInInProgress}\n              disabled={true}\n            >\n              {loginInProgress ? 'sending...' : 'send message'}\n            </Button>\n          </form>\n        </Paper>\n      </main>\n    </Grid>\n  );\n}\n","import { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../source/store';\n\n// -- Interfaces\n\nexport enum StatusChoices {\n  NONE,\n  INPROGRESS,\n  SUCCESS,\n  FAILED,\n}\nexport interface Cell {\n  id: number;\n  row: number;\n  column: number;\n  visible: boolean;\n  value: number;\n  flag: boolean;\n}\n\ninterface GameInterface {\n  id:number;\n  status: string;\n  row_size: number;\n  column_size: number;\n  cells: Cell[];\n  getGameInProgress: boolean;\n}\n\nexport interface GameUpdatePayload {\n  game_id: number;\n  cell_id: number;\n  flag?: boolean;\n}\n\nconst initialState: GameInterface = {\n  id:0,\n  status: '',\n  row_size: 0,\n  column_size: 0,\n  cells: [],\n  getGameInProgress: false,\n};\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    doGetGame: (state) => {\n      state.getGameInProgress = true;\n    },\n    doneGetGame: (state, action: PayloadAction<GameInterface>) => {\n      state.id = action.payload.id;\n      state.status = action.payload.status;\n      state.row_size = action.payload.row_size;\n      state.column_size = action.payload.column_size;\n      state.cells = action.payload.cells;\n      state.getGameInProgress = false;\n    },\n    doUpdateGame: (state, action: PayloadAction<GameUpdatePayload>) => {\n      // state.getGameInProgress = true;\n    },\n    doneUpdateGame: (state, action: PayloadAction<GameInterface>) => {\n      state.id = action.payload.id;\n      state.status = action.payload.status;\n      state.row_size = action.payload.row_size;\n      state.column_size = action.payload.column_size;\n      state.cells = action.payload.cells;\n      state.getGameInProgress = false;\n    },\n  },\n});\n\n// -- Actions\n\nexport const {\n  doGetGame,\n  doneGetGame,\n  doUpdateGame,\n  doneUpdateGame,\n} = gameSlice.actions;\n\n// -- Selectors\n\nexport const selectGame = (state: RootState) => state.game;\nexport default gameSlice.reducer;\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport { styled } from '@material-ui/styles';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Cell as CellInterface, doUpdateGame, selectGame } from './gameSlice';\ninterface Props {\n  cell: CellInterface;\n}\ninterface StatusProps {\n  active: boolean;\n}\nconst StyledTableCell = styled(TableCell)({\n  border: '1px solid rgba(224, 224, 224, 1)',\n  'padding-right': '16px',\n  background: (props: StatusProps) => (props.active ? 'white' : 'gray'),\n});\nconst StyledDiv = styled('div')({\n  width: '25px',\n  height: '25px',\n  display: 'inline-block',\n  color: 'black',\n});\nexport default function Cell(props: Props) {\n  const dispatch = useDispatch();\n  const { id: game_id, status } = useSelector(selectGame);\n  const is_playing = ['pending', 'started'].includes(status);\n  const { id, visible, flag, value } = props.cell;\n  const getValue = () => {\n    if (flag) return '🚩';\n    if (!visible) return flag ? '🚩' : null;\n\n    if (value === -1) return '💣';\n\n    if (value === 0) return null;\n\n    return value;\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, cell_id: number) => {\n    if (is_playing) dispatch(doUpdateGame({ game_id: game_id, cell_id: cell_id }));\n  };\n  const handleOnAuxClick = (event: React.MouseEvent<unknown>, cell_id: number) => {\n    event.preventDefault();\n    if (is_playing)\n      dispatch(doUpdateGame({ game_id: game_id, cell_id: cell_id, flag: !flag }));\n  };\n  return (\n    <StyledTableCell\n      active={visible}\n      align=\"center\"\n      size=\"small\"\n      onClick={(event) => handleClick(event, id)}\n      onContextMenu={(event) => handleOnAuxClick(event, id)}\n    >\n      <StyledDiv>{getValue()}</StyledDiv>\n    </StyledTableCell>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Confetti from 'react-confetti';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectGame, doGetGame } from './gameSlice';\n\nimport Cell from './Cell';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      height: '700px',\n      textAlign: 'center',\n    },\n    tableContainer: {\n      height: '700px',\n      backgroundColor: 'gray',\n    },\n    container: {\n      marginTop: 10,\n    },\n    containerCI: {\n      backgroundColor: 'gray',\n      'margin-block-start': '35%',\n    },\n    containerButtonGroup: {\n      marginTop: theme.spacing(3),\n      textAlign: 'center',\n      width: '100%',\n    },\n    box: {\n      'text-align': 'center',\n      color: 'white',\n      margin: 2,\n      height: '80px',\n    },\n  })\n);\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { status, cells, row_size, column_size, getGameInProgress } = useSelector(\n    selectGame\n  );\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n    }, 100);\n  });\n  useEffect(() => {\n    if (status == '') dispatch(doGetGame());\n  }, []);\n\n  function handleOnClick(size: number) {\n    switch (size) {\n      case 1:\n        dispatch(doGetGame());\n        break;\n      case 2:\n        dispatch(doGetGame());\n        break;\n      case 3:\n        dispatch(doGetGame());\n        break;\n      default:\n        dispatch(doGetGame());\n        break;\n    }\n  }\n\n  function getCell(row: number, col: number) {\n    let cell = cells.find((cell) => cell.row === row && cell.column === col);\n    if (cell === undefined) return <></>;\n    return <Cell cell={cell} />;\n  }\n\n  function getRow(row: number) {\n    let result = [];\n    for (let col = 0; col < column_size; col++) {\n      result.push(getCell(row, col));\n    }\n    return result;\n  }\n  function success() {\n    let text = '';\n    if (status == 'win'){\n      text = 'You Win!';\n    }else if(status == 'lost')\n      text = 'You Lost :(';\n\n    return <Box\n          fontSize=\"h2.fontSize\"\n          fontWeight=\"fontWeightBold\"\n          m={1}\n          className={classes.box}\n        >\n          {text}\n          {status == 'win' && <Confetti width={width} height={height} numberOfPieces={450} />}\n        </Box>\n  }\n\n  function renderBoard() {\n    if (getGameInProgress)\n      return (\n        <Container className={classes.containerCI}>\n          <CircularProgress />\n        </Container>\n      );\n    let result = [];\n    for (let row = 0; row < row_size; row++) {\n      result.push(<TableRow key={row}>{getRow(row)}</TableRow>);\n    }\n    return result;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.container}>\n      {success()}\n      <TableContainer component={Paper} className={classes.tableContainer}>\n        <Table className={classes.table}>\n          <TableBody>{renderBoard()}</TableBody>\n        </Table>\n      </TableContainer>\n      <Container className={classes.containerButtonGroup}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={getGameInProgress}\n          onClick={() => handleOnClick(1)}\n        >\n          Restart\n        </Button>\n        {/* <ButtonGroup variant=\"contained\" color=\"primary\">\n          <Button disabled={getGameInProgress} onClick={() => handleOnClick(1)}>\n            easy\n          </Button>\n          <Button disabled={getGameInProgress} onClick={() => handleOnClick(2)}>\n            medium\n          </Button>\n          <Button disabled={getGameInProgress} onClick={() => handleOnClick(3)}>\n            hard\n          </Button>\n        </ButtonGroup> */}\n      </Container>\n    </Container>\n  );\n}\n","import { ThemeProvider,responsiveFontSizes } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { appMaterial } from './app-material';\nimport TopBar from './components/app/components/TopBar';\nimport { SignUp } from './components/user/SignUp';\nimport { PrivateRoute } from './components/user/PrivateRoute';\nimport SignIn from './components/user/SignIn';\nimport Dashboard from './components/Dashboard';\nimport WhatIDo from './components/WhatIDo';\nimport Portfolio from './components/Portfolio';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Game from './components/game/Main';\n\nlet theme = responsiveFontSizes(appMaterial);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <CssBaseline />\n\n        <TopBar />\n        <Switch>\n          <Route path=\"/signin\">\n            <SignIn />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <PrivateRoute path=\"/game\">\n            <Game />\n          </PrivateRoute>\n          <Route path=\"/what-i-do\">\n            <WhatIDo />\n          </Route>\n          <Route path=\"/portfolio\">\n            <Portfolio />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { createAction } from '@reduxjs/toolkit';\n\n// -- Actions\n\nexport const initApp = createAction('initApp')\nexport const initAppDone = createAction('initAppDone')\n","import { call, put } from 'redux-saga/effects';\nimport { authFailed } from '../components/user/userSlice';\n\n// -- Interfaces\n\ninterface headers {\n  [k: string]: string;\n}\n\ninterface settings {\n  method: string;\n  headers?: headers;\n  body?: string;\n}\n\n// -- Helpers\n\nfunction get_credentials() {\n  return {\n    token: localStorage.getItem('token') || '',\n  };\n}\n\nfunction addAuthHeaders(config: settings): settings {\n  const credentials = get_credentials();\n  return {\n    ...config,\n    headers: {\n      ...config.headers,\n      authorization: `Token ${credentials.token}`,\n    },\n  };\n}\n\nfunction* fetchAuthorized(url: string, config: settings) {\n  const response = yield call(fetch, url, addAuthHeaders(config));\n  if (response.status === 401) {\n    yield put(authFailed());\n  }\n  return response;\n}\n\nexport const authorized = {\n  get: (url: string, headers?: object) => {\n    const config = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        ...headers,\n      },\n    };\n    return fetchAuthorized(url, config);\n  },\n  delete: (url: string) => {\n    const config = {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n      },\n    };\n    return fetchAuthorized(url, config);\n  },\n  post: (url: string, body: any) => {\n    const config = {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'content-type': 'application/json',\n      },\n    };\n    return fetchAuthorized(url, config);\n  },\n  patch: (url: string, body: any) => {\n    const config = {\n      method: 'PATCH',\n      body: JSON.stringify(body),\n      headers: {\n        'content-type': 'application/json',\n      },\n    };\n    return fetchAuthorized(url, config);\n  },\n};\n","import { call } from 'redux-saga/effects';\nimport { authorized } from './auth';\n\nexport function* signOut() {\n  localStorage.removeItem('token');\n}\n\nexport function* createGame() {\n  const response = yield call(\n    authorized.post,\n    `${process.env.REACT_APP_API_BASE_URL}/api/v1/game/`,\n    {\n      row_size: 6,\n      column_size: 6,\n      mines_size: 4,\n    }\n  );\n  return yield call([response, 'json']);\n}\n\nexport function* updateGame(game_id: number, cell_id: number, flag?: boolean) {\n  const url = `${process.env.REACT_APP_API_BASE_URL}/api/v1/game/${game_id}/`;\n  let body = flag === undefined ? { cell_id } : { cell_id, flag };\n  const response = yield call(authorized.patch, url, body);\n  return yield call([response, 'json']);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { call, put, takeEvery } from 'redux-saga/effects';\n\nimport { initApp } from '../components/app/actions';\n\nimport {\n  doLogin,\n  doneLogin,\n  doSignOut,\n  doSignUp,\n  doneSignUp,\n  SignInPayload,\n  SignUpPayload,\n} from '../components/user/userSlice';\n\nimport {\n  GameUpdatePayload,\n  doGetGame,\n  doneGetGame,\n  doUpdateGame,\n  doneUpdateGame,\n} from '../components/game/gameSlice';\n\nimport * as api from '../utils/api';\n\nfunction* initAppSaga() {\n  const token = localStorage.getItem('token');\n  if (!!token && token !== 'undefined' && token !== 'null') {\n    yield put(\n      doneLogin({\n        error: false,\n        errorMessage: '',\n      })\n    );\n  }\n}\n\nfunction* doLoginSaga(action: PayloadAction<SignInPayload>) {\n  let errorMessage = '';\n\n  try {\n    yield fetch(`${process.env.REACT_APP_API_BASE_URL}/api/rest-auth/login/`, {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: action.payload.email,\n        password: action.payload.password,\n      }),\n    })\n      .then((response) => {\n        switch (response.status) {\n          case 200:\n            return response.json();\n          case 400:\n          case 401:\n            errorMessage = 'Could not log in, please check login credentials.';\n            return {\n              token: null,\n              refresh: null,\n            };\n          default:\n            errorMessage = 'Unknown error, please contact support.';\n            return {\n              token: null,\n              refresh: null,\n            };\n        }\n      })\n      .then((json) => {\n        const { key } = json;\n        if (key) {\n          localStorage.setItem('token', key);\n        } else {\n          localStorage.removeItem('token');\n        }\n      });\n\n    if (errorMessage.length === 0) {\n      yield put(\n        doneLogin({\n          error: false,\n          errorMessage: '',\n        })\n      );\n      yield put(initApp());\n    } else {\n      yield put(\n        doneLogin({\n          error: true,\n          errorMessage: errorMessage,\n        })\n      );\n    }\n  } catch (e) {\n    yield put(\n      doneLogin({\n        error: true,\n        errorMessage: 'API is not responding, please try later',\n      })\n    );\n  }\n}\n\nfunction* doSignUpSaga(action: PayloadAction<SignUpPayload>) {\n  let is_result_success = false;\n  let status_code = 201;\n  let messages: string[] = [];\n\n  try {\n    is_result_success = yield fetch(\n      `${process.env.REACT_APP_API_BASE_URL}/api/rest-auth/registration/`,\n      {\n        method: 'post',\n        mode: 'cors',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: action.payload.email,\n          password1: action.payload.password1,\n          password2: action.payload.password2,\n        }),\n      }\n    )\n      .then((response) => {\n        status_code = response.status;\n        return response.json();\n      })\n      .then((json) => {\n        if (status_code !== 201) throw json;\n        const { key } = json;\n        localStorage.setItem('token', key);\n      });\n  } catch (e) {\n    messages = getMessagesFromError(e, status_code);\n  }\n  yield put(doneSignUp(messages));\n}\n\nfunction getMessagesFromError(\n  errors: { [key: string]: [string] },\n  status_code: number\n) {\n  let l: string[] = [];\n  let result = ['Something went wrong!'];\n  if (status_code == 400)\n    result = Object.keys(errors).reduce((acc, cur) => {\n      return ['email', 'password1', 'non_field_errors'].includes(cur) ? [...acc, ...errors[cur]] : acc;\n    }, l);\n  return result;\n}\n\nexport function* getGameSaga(action: PayloadAction<SignInPayload>) {\n  const result = yield call(api.createGame);\n  yield put(doneGetGame(result));\n}\n\nexport function* doUpdateGameSaga(action: PayloadAction<GameUpdatePayload>) {\n  const result = yield call(\n    api.updateGame,\n    action.payload.game_id,\n    action.payload.cell_id,\n    action.payload.flag\n  );\n  yield put(doneUpdateGame(result));\n}\n\nexport function* signOutSaga() {\n  yield call(api.signOut);\n}\n\nexport function* root() {\n  yield takeEvery(initApp.type, initAppSaga);\n\n  yield takeEvery(doLogin.type, doLoginSaga);\n  yield takeEvery(doSignOut.type, signOutSaga);\n\n  yield takeEvery(doSignUp.type, doSignUpSaga);\n\n  yield takeEvery(doGetGame.type, getGameSaga);\n  yield takeEvery(doUpdateGame.type, doUpdateGameSaga);\n}\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n  Action,\n} from '@reduxjs/toolkit';\n\nimport createSagaMiddleware from 'redux-saga';\n\nimport { initApp } from '../components/app/actions';\nimport userReducer from '../components/user/userSlice';\nimport gameSlice from '../components/game/gameSlice';\n\nimport { root } from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [...getDefaultMiddleware(), sagaMiddleware];\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    game: gameSlice,\n  },\n  middleware,\n  devTools: true,\n});\n\nsagaMiddleware.run(root);\n\nstore.dispatch(initApp());\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './source/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}